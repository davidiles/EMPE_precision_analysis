
    model {
  
  # ------------------------------------
  # Population process model
  # ------------------------------------
  
  # Spatial random effect for X[s,1]
  X1_mean ~ dunif(0,50000)
  logX1_mean <- log(X1_mean)
  logX1_tau ~ dgamma(0.001,0.001)
  logX1_sigma <- 1/pow(logX1_tau,0.5)
  
  # Spatial random effect for r_mean[s]
  r_mean_grandmean_mu ~ dnorm(0,25)
  r_mean_grandmean_tau ~ dgamma(0.001,0.001)
  r_mean_grandmean_sigma <- 1/pow(r_mean_grandmean_tau,0.5)
  
  # Temporal variance in population growth
  r_tau ~ dgamma(0.001,0.001)
  r_sigma <- 1/pow(r_tau,0.5)
  
  # Growth dynamics at each colony
  for (s in 1:n_sites){
    
    # Initial abundance at colony 
    log_X[s,1] ~ dnorm(logX1_mean,logX1_tau)
    
    # Median annual change at colony
    r_mean[s] ~ dnorm(r_mean_grandmean_mu,r_mean_grandmean_tau) 
    
    # Population growth from year to year at colony
    for (t in 1:(n_years-1)){
      log_X[s,t+1] ~ dnorm(log_X[s,t] + r_mean[s], r_tau)
    }
  } 
  
  # Probability each colony is occupied each year
  prob_occ ~ dunif(0,1)
  
  # Occupancy dynamics at each colony (not a Markov process)
  for (s in 1:n_sites){
    for (t in 1:n_years){
    
      # True occupancy state at colony in each year
      z_occ[s,t] ~ dbern(prob_occ)
      
    }
  }
  
  # ------------------------------------
  # Annual population indices at each colony
  # ------------------------------------
  
  for (s in 1:n_sites){
    for (t in 1:n_years){
      N[s,t] <- exp(log_X[s,t]) * z_occ[s,t]
    }
  }
  
  # ------------------------------------
  # Shared 'day of season' effect to account for phenology
  # ------------------------------------
  DoS_slope ~ dnorm(0,25)

  # ------------------------------------
  # Aerial observation model
  # ------------------------------------
  
  aerial_tau ~ dgamma(0.001,0.001) 
  aerial_sigma <- 1/pow(aerial_tau,0.5)
  
  for (i in 1:n_obs_aerial){
    
    lambda[i] ~ dlnorm(log_X[aerial_site[i],aerial_year[i]] + aerial_DoS[i]*DoS_slope - 0.5*pow(aerial_sigma,2), aerial_tau)
    adult_expected[i] <- z_occ[aerial_site[i],aerial_year[i]] * lambda[i]
    adult_count[i] ~ dpois(adult_expected[i])
    
  }
  
  # ------------------------------------
  # Satellite observation model
  # ------------------------------------
  
  # Describes proportional bias (slope) and variance in satellite counts for each level of image quality (1, 2, or 3)
  for (i in 1:3){
    sat_slope[i] ~ dnorm(1,25)
    sat_CV[i] ~ dunif(0,2)
  }

  for (i in 1:n_obs_satellite){
    
    # Observation error (and bias) for satellite counts is estimated from data
    sat_expected[i] <- N[satellite_site[i],satellite_year[i]] * sat_slope[img_qual[i]] * exp(DoS_slope * satellite_DoS[i])
    sat_sigma[i] <- sat_expected[i] * sat_CV[img_qual[i]] + 0.00001 # Tiny constant ensures tau is define when var is zero
    sat_tau[i] <- pow(sat_sigma[i],-2)
    
    satellite[i] ~ dnorm(sat_expected[i], sat_tau[i])
  }
  
  # ------------------------------------
  # Global change and trend
  # ------------------------------------
  
  # Global abundance each year
  for (t in 1:n_years){
    N_global[t] <- sum(N[1:n_sites,t])
  }
  
  # Global trend (measured as least squares regression slope on log scale)
  global_trend <- inprod(log(N_global[1:n_years]),regression_weights[1,1:n_years])
  
  #------------------------------------
  # Posterior predictive checks
  #------------------------------------
  
  # Posterior predictive check for aerial count data
  for (i in 1:n_obs_aerial){
  
    # Simulate aerial observations
    sim_lambda[i] ~ dlnorm(log_X[aerial_site[i],aerial_year[i]] + aerial_DoS[i]*DoS_slope - 0.5*pow(aerial_sigma,2), aerial_tau)
    sim_adult_count[i] ~ dpois(z_occ[aerial_site[i],aerial_year[i]] * sim_lambda[i])
    
    # Calculate discrepancy measures of actual and simulated data
    sqE_adult_count_actual[i] <- pow(adult_count[i] - N[aerial_site[i],aerial_year[i]] ,2)
    sqE_adult_count_sim[i] <- pow(sim_adult_count[i] - N[aerial_site[i],aerial_year[i]],2)
    
  }
  
  # Posterior predictive check for satellite data
  for (i in 1:n_obs_satellite){
  
    # Simulate satellite observations
    sim_satellite[i] ~ dnorm(sat_expected[i],sat_tau[i])
    
    # Calculate discrepancy measures of actual and simulated data
    sqE_satellite_actual[i] <- pow(satellite[i] - N[satellite_site[i],satellite_year[i]],2)
    sqE_satellite_sim[i] <- pow(sim_satellite[i] - N[satellite_site[i],satellite_year[i]],2)
    
  }
  
  # Root mean squared error of empirical data
  RMSE_adult_count_actual <- sqrt(mean(sqE_adult_count_actual[]))
  RMSE_satellite_actual <- sqrt(mean(sqE_satellite_actual[]))
  
  # Root mean squared error of simulated data
  RMSE_adult_count_sim <- sqrt(mean(sqE_adult_count_sim[]))
  RMSE_satellite_sim <- sqrt(mean(sqE_satellite_sim[]))
  
}
    
